{"version":3,"sources":["components/Persons.js","components/PersonForm.js","components/Notification.js","components/Filter.js","services/persons.js","App.js","index.js"],"names":["Persons","persons","deletePerson","map","person","name","number","onClick","id","PersonForm","props","onSubmit","addPerson","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","type","Notification","message","className","Filter","baseUrl","axios","get","then","response","data","newObject","post","put","delete","App","useState","setPersons","setNewName","setNewNumber","filterString","setStringFilter","notification","setNotification","useEffect","personService","notifyWith","setTimeout","personsToShow","filter","toLowerCase","includes","event","target","preventDefault","existing","find","p","window","confirm","retunedPerson","addedPerson","concat","catch","error","console","log","toDelete","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d1976ca.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Persons = ({ persons, deletePerson }) => {\r\n  return (\r\n    persons.map(person=>\r\n      <p key={person.id}>\r\n        {person.name} {person.number} \r\n        <button onClick={() => deletePerson(person.id)}>delete</button>\r\n      </p>\r\n    )\r\n  )\r\n}\r\n\r\nexport default Persons","import React from 'react'\r\n\r\nconst PersonForm = (props) => {\r\n\r\n  return (\r\n    <form onSubmit={props.addPerson}>\r\n      <div>\r\n        name: \r\n        <input\r\n          value={props.newName}\r\n          onChange={props.handleNameChange}\r\n        />\r\n      </div>\r\n      <div>\r\n        number:\r\n        <input \r\n          value={props.newNumber}\r\n          onChange={props.handleNumberChange}          \r\n        />\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\">add</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default PersonForm","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n      <div className=\"added\">\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Notification\r\n","import React from 'react'\r\n\r\nconst Filter = (props) => {\r\n\r\n  return (\r\n    <input\r\n    value={props.value}\r\n    onChange={props.onChange}\r\n  />\r\n  )\r\n}\r\n\r\nexport default Filter","import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => {\r\n    return response.data\r\n  })\r\n}\r\n\r\nconst create = (newObject) => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n  const request = axios.delete(`${baseUrl}/${id}`)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { getAll, create, update, remove}","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport PersonForm from './components/PersonForm'\nimport Notification from './components/Notification'\nimport Filter from './components/Filter'\nimport personService from './services/persons'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filterString, setStringFilter ] = useState('')\n  const [ notification, setNotification ] = useState(null)\n\n  useEffect(() => {\n    personService\n      .getAll()\n      .then((data) => {\n        setPersons(data)\n      })\n\n  }, [])\n\n  const notifyWith = (message, type='success') => {\n    setNotification({ message, type })\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000)\n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }  \n  \n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }  \n\n  const handleFilterStringChange = (event) => {\n    setStringFilter(event.target.value)\n  } \n\n  const deletePerson = (id) => {\n    const toDelete = persons.find(p => p.id === id)\n    const ok = window.confirm(`Delete ${toDelete.name}`)\n    if (ok) {\n      personService.remove(id)\n        .then(response => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`Deleted ${toDelete.name}`)\n        }).catch(() => {\n          setPersons(persons.filter(p => p.id !== id))\n          notifyWith(`${toDelete.name} had already been removed`, 'error')\n        })\n    }\n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n\n    const existing = persons.find(p => p.name === newName)\n    if (existing) {\n      const ok = window.confirm(`${existing.name} already in phonebook, replace the old number with new one?`)\n      if (ok) {\n        personService.update(existing.id, {\n          name: existing.name,\n          number:newNumber\n        }).then(retunedPerson => {\n          setPersons(persons.map(person => person.id !== existing.id ? person : retunedPerson))\n          notifyWith(`Changed number of  ${existing.name}`)\n          setNewName('')\n          setNewNumber('')\n        })\n      }\n\n    } else {\n      personService.create({\n        name: newName,\n        number: newNumber   \n      }).then(addedPerson => {\n        setPersons(persons.concat(addedPerson))\n        notifyWith(`Added ${newName}`)\n        setNewName('')\n        setNewNumber('')\n      }).catch(error => {\n        console.log(error.response.data.error)\n        notifyWith(`${error.response.data.error} `, 'error')\n      })\n    }\n  }\n\n  const personsToShow = filterString ? persons.filter(person => person.name.toLowerCase().includes(filterString.toLowerCase())) : persons\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification notification={notification} />\n\n      filter shown with: \n      <Filter\n        value={filterString}\n        onChange={handleFilterStringChange}\n      />\n\n      <h3>add a new</h3>\n      <PersonForm \n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        newNumber={newNumber}\n        newName={newName}\n        addPerson={addPerson}\n      />\n     \n      <h3>Numbers</h3>\n      <Persons persons={personsToShow} deletePerson={deletePerson}/>\n    </div>\n  )\n\n}\n\nexport default App ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'))\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}